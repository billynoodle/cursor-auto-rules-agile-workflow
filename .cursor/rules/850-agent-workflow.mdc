---
description: IMPLEMENT consistent AI operations to ENSURE reliable agile workflow execution
globs: **/*
---

# Agent Workflow Standards

<version>1.4.0</version>

## Context
- Applied when I am working within the agile framework
- Guides my interaction with stories and tasks
- Ensures consistent development approach
- Maintains project momentum
- Enforces rule compliance

## Requirements

### 1. Rule Validation Process

#### Initial Assessment
- Check @000-rule-enforcement for applicable rules
- Validate against rule requirements
- Document rule compliance plan
- Identify potential conflicts

#### Implementation Planning
- Apply relevant rule templates
- Follow rule-specific patterns
- Document rule adherence
- Track any deviations

### 2. Development Workflow

#### Code Changes
- Follow test-driven development (@805-tdd-implementation)
- Make atomic commits
- Update documentation (@702-documentation-standards)
- Add progress comments
- Track technical debt
- Validate against rules

#### Progress Updates
- Update story status (@903-story-template)
- Document blockers immediately
- Track completion metrics
- Link related changes
- Record decisions made
- Create daily retrospectives
- Verify rule compliance

### 3. Quality Standards

#### Code Quality
- Write tests first (@301-comprehensive-test-strat)
- Follow architecture patterns (@701-architecture-patterns)
- Maintain documentation (@400-md-docs)
- Consider performance
- Handle edge cases
- Check rule adherence

#### Review Process
- Self-review changes
- Update test coverage
- Check acceptance criteria
- Validate dependencies
- Document impact
- Verify rule compliance

### 4. Communication Protocol

#### Status Updates
- Use clear, concise language
- Include progress metrics
- Highlight blockers early
- Reference related items
- Provide next steps
- Document rule adherence

#### Technical Documentation
- Update inline comments
- Maintain README files
- Document decisions
- Link related changes
- Explain trade-offs
- Track rule compliance

### 5. Rule Compliance Management

#### Pre-Operation
- [ ] List applicable rules
- [ ] Check requirements
- [ ] Document compliance plan
- [ ] Verify no conflicts

#### During Operation
- [ ] Follow rule templates
- [ ] Track compliance
- [ ] Document deviations
- [ ] Update documentation

#### Post-Operation
- [ ] Verify compliance
- [ ] Update documentation
- [ ] Track effectiveness
- [ ] Plan improvements

## Examples

### Effective Story Implementation
```markdown
Analyzing story AUTH-2: Password Reset...

1. Requirements Analysis:
   - User story reviewed
   - Dependencies checked
   - Architecture validated
   - Constraints identified

2. Implementation Plan:
   - Write password reset tests
   - Implement email service
   - Add reset endpoints
   - Update documentation

3. Progress Tracking:
   - Story points: 5
   - Status: In Progress
   - Blockers: None
   - Next: Email integration

4. Technical Decisions:
   - Using JWT for tokens
   - 24h expiry period
   - Rate limiting added

5. Daily Retrospective:
   - Progress documented
   - Learnings captured
   - Next steps planned
   - Metrics updated
```

### Ineffective Implementation
<example type="invalid">
Starting work on auth...
Making some changes...
Will add tests later...
No retrospective needed...
</example>

## Critical Notes
- NEVER skip rule validation
- ALWAYS document compliance
- NEVER ignore conflicts
- ALWAYS track deviations
- NEVER bypass critical rules
- ALWAYS update documentation
- NEVER assume compliance
- ALWAYS verify effectiveness

## Integration Points
- Follow @000-rule-enforcement for validation
- Use @903-story-template for stories
- Apply @702-documentation-standards
- Follow @301-comprehensive-test-strat
- Use @400-md-docs for documentation
- Apply @701-architecture-patterns