---
description: IMPLEMENT sprint workflow to ENSURE consistent sprint planning and execution
globs: .ai/sprints/**/*
alwaysApply: false
---
# Sprint Workflow Standards

<version>1.0.0</version>
<rule_type>workflow</rule_type>
<applies_to>**.md</applies_to>
<priority>high</priority>

## Context
- Used when starting a new sprint
- Applied during sprint planning
- Referenced for daily progress
- Guides sprint completion

## Requirements

### Sprint Initialization
```markdown
1. Create sprint file:
   .ai/sprints/SPRINT-{N}.md

2. Set sprint metadata:
   - Sprint Number: N
   - Start Date: YYYY-MM-DD
   - End Date: YYYY-MM-DD
   - Story Points Target: X
   - Team Capacity: Y story points
   - Focus Areas: [list key objectives]

3. Link active stories:
   - Copy from backlog
   - Update story status
   - Set sprint assignments
   - Check dependencies

4. Create burndown chart:
   ```mermaid
   gantt
       title Sprint Burndown
       dateFormat YYYY-MM-DD
       axisFormat %d
       section Points
       Ideal    : milestone, 0, 0d
       Current  : milestone, 0, 0d
   ```

5. Set up daily tracking:
   - Progress updates section
   - Blocker tracking
   - Velocity metrics
   - Team notes
```

### Daily Operations
```markdown
1. Update sprint status:
   - Mark completed stories
   - Update story points
   - Record blockers
   - Update burndown

2. Check sprint health:
   - Velocity vs target
   - Blocker resolution
   - Dependencies status
   - Risk assessment

3. Plan next actions:
   - Priority stories
   - Blocker resolution
   - Team coordination
   - Resource needs

4. Create daily retrospective:
   - Use template from .ai/sprints/retrospectives/template.md
   - Document in .ai/sprints/retrospectives/YYYY-MM-DD-retro.md
   - Required sections:
     - What Went Well (progress, quality, process)
     - What Could Be Improved (technical, process, dependencies)
     - Action Items (immediate, short-term, long-term)
     - Learnings (technical, process, risk management)
     - Next Steps (priorities and improvements)
     - Metrics Summary (sprint, quality, components, docs)
     - Dependencies Update (external and internal)
     - Notes for Tomorrow (focus areas and preparation)
```

### Sprint Completion
```markdown
1. Finalize metrics:
   - Stories completed
   - Points delivered
   - Velocity achieved
   - Quality metrics

2. Create retrospective:
   .ai/sprints/retrospectives/SPRINT-{N}-retro.md
   - Follow template structure
   - Include sprint-level metrics
   - Document key learnings
   - List action items for next sprint

3. Archive sprint:
   - Move to completed
   - Update epic progress
   - Link retrospective
   - Record learnings
```

## File Structure
```
.ai/
├── sprints/
│   ├── current.md
│   ├── SPRINT-{N}.md
│   └── retrospectives/
│       ├── template.md
│       ├── YYYY-MM-DD-retro.md
│       └── SPRINT-{N}-retro.md
.cursor/
└── rules/
    └── 853-sprint-workflow.mdc
```

## Critical Notes
- NEVER start without clear goals
- ALWAYS set measurable targets
- NEVER skip daily updates
- ALWAYS track blockers
- NEVER leave metrics blank
- ALWAYS plan next actions
- NEVER ignore dependencies
- ALWAYS document decisions
- NEVER skip retrospectives
- ALWAYS use templates